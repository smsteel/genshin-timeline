{"version":3,"sources":["GenshinCharacter.js","GenshinTimeline.js","keys.js","helpers.js","Progress.js","serializeValues.js","GenshinTimelineFilter.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","characterAvatar","width","spacing","height","margin","border","boxShadow","background","marginTop","backgroundPosition","backgroundRepeat","characterAvatarSmall","characterAvatar4Stars","borderColor","characterAvatar5Stars","ElementBadge","withStyles","badge","borderRadius","right","bottom","palette","paper","Badge","SmallElementBadge","minWidth","ConstellationImageBadge","color","ElementAvatar","root","Avatar","SmallElementAvatar","GenshinCharacter","character","small","constellation","classes","BadgeElement","useMemo","overlap","anchorOrigin","vertical","horizontal","badgeContent","src","element","url","alt","name","data","images","sideicon","className","classNames","rarity","container","alignSelf","genshinTimelineItem","display","charactersContainer","GenshinTimelineItem","has5Star","characters","some","hasC6","TimelineItem","TimelineOppositeContent","Typography","variant","date","format","TimelineSeparator","TimelineDot","style","TimelineConnector","TimelineContent","map","key","GenshinTimeline","timelineElements","Timeline","align","CLIENT_ID","SCOPES","DISCOVERY_DOCS","loadSpreadSheetAPI","gapi","client","init","client_id","scope","discoveryDocs","alignItems","justifyContent","Progress","CircularProgress","moment","locale","elementRelations","Анемо","Крио","Дендро","Электро","Гео","Гидро","Пиро","serializeValues","values","dates","names","forEach","v","ROW_ID","COLUMN_ID","queryOpts","queryLanguages","resultLanguage","genshinDb","constellationImages","constellations","elements","toString","console","error","Object","sort","f","s","unix","position","top","padding","zIndex","GenshinTimelineFilter","setFilteredTimelineElements","filteredTimelineElements","useState","filteredNames","setFilteredNames","useEffect","reduce","a","uniqueCharacters","uniqBy","c","handleChange","useCallback","_","newCharacterNames","length","newTimelineElements","e","newCharacters","filter","includes","ToggleButtonGroup","size","value","onChange","ToggleButton","spreadsheetId","range","App","setGapi","isSignedIn","setSignedIn","setTimelineElements","updateSignedInStatus","auth2","getAuthInstance","get","loadGapiInsideDOM","loadClientAuth2","initGoogleApi","handleSignInClick","signIn","then","handleSignOutClick","signOut","sheets","spreadsheets","result","loadSpreadSheetData","AppBar","Toolbar","flexGrow","textAlign","Button","onClick","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6503745d.chunk.js","sourcesContent":["import { Avatar, Badge } from '@material-ui/core'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport classNames from 'classnames'\r\nimport { useMemo } from 'react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  characterAvatar: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: theme.spacing(1),\r\n    border: '1px solid',\r\n    boxShadow: '0px 2px 4px 0px #00000069, 0px 1px 0px 0px #f1f1f1',\r\n    '& > img': {\r\n      background: 'radial-gradient(circle, rgba(255,255,255,1) 10%, rgba(255,255,255,0) 70%)',\r\n      marginTop: '-20%',\r\n      backgroundPosition: '0 12px',\r\n      backgroundRepeat: 'no-repeat',\r\n      width: '120%',\r\n      height: '120%'\r\n    }\r\n  },\r\n  characterAvatarSmall: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n    boxShadow: 'none',\r\n    margin: 0\r\n  },\r\n  characterAvatar4Stars: {\r\n    background: 'linear-gradient(144deg, rgba(2,0,36,1) 0%, rgba(105,9,121,1) 35%, rgba(196,0,255,1) 100%)',\r\n    borderColor: '#7e2c96'\r\n  },\r\n  characterAvatar5Stars: {\r\n    background: 'linear-gradient(144deg, rgba(91,55,0,1) 0%, rgba(242,130,10,1) 42%, rgba(255,188,0,1) 100%)',\r\n    borderColor: '#de790d'\r\n  }\r\n}))\r\n\r\nconst ElementBadge = withStyles(theme => ({\r\n  badge: {\r\n    background: '#00406d',\r\n    width: '20px',\r\n    height: '20px',\r\n    borderRadius: '10px',\r\n    right: '18%',\r\n    bottom: '18%',\r\n    border: `2px solid ${theme.palette.background.paper}`\r\n  }\r\n}))(Badge)\r\n\r\nconst SmallElementBadge = withStyles(theme => ({\r\n  badge: {\r\n    // background: 'transparent',\r\n    width: 14,\r\n    minWidth: 14,\r\n    height: 14,\r\n    borderRadius: 7,\r\n    border: 0,\r\n    right: 0,\r\n    bottom: 0\r\n  }\r\n}))(ElementBadge)\r\n\r\nconst ConstellationImageBadge = withStyles(theme => ({\r\n  badge: {\r\n    background: '#00406d',\r\n    color: '#fff',\r\n    right: '-10%',\r\n    bottom: '25%'\r\n  }\r\n}))(ElementBadge)\r\n\r\nconst ElementAvatar = withStyles((theme) => ({\r\n  root: {\r\n    width: 20,\r\n    height: 20\r\n  }\r\n}))(Avatar)\r\n\r\nconst SmallElementAvatar = withStyles((theme) => ({\r\n  root: {\r\n    width: 12,\r\n    height: 12\r\n  }\r\n}))(ElementAvatar)\r\n\r\nfunction GenshinCharacter ({ character, small = false, constellation = true }) {\r\n  const classes = useStyles()\r\n\r\n  const BadgeElement = small ? SmallElementBadge : ElementBadge\r\n\r\n  const badge = useMemo(() => (\r\n    <BadgeElement\r\n      overlap='circle'\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      badgeContent={small ? <SmallElementAvatar src={character.element.url} /> : <ElementAvatar src={character.element.url} />}\r\n    >\r\n      <Avatar\r\n        alt={character.name}\r\n        src={character.data.images.sideicon}\r\n        className={classNames(\r\n          classes.characterAvatar,\r\n          character.data.rarity === '4' && classes.characterAvatar4Stars,\r\n          character.data.rarity === '5' && classes.characterAvatar5Stars,\r\n          small && classes.characterAvatarSmall\r\n        )}\r\n      />\r\n    </BadgeElement>\r\n  ), [character, classes, small])\r\n\r\n  if (!constellation) {\r\n    return badge\r\n  }\r\n\r\n  return (\r\n    <ConstellationImageBadge\r\n      overlap='circle'\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n      badgeContent={character.constellation}\r\n    >\r\n      {badge}\r\n    </ConstellationImageBadge>\r\n  )\r\n}\r\n\r\nexport default GenshinCharacter\r\n","import { Typography } from '@material-ui/core'\r\nimport { Timeline, TimelineConnector, TimelineContent, TimelineDot, TimelineItem, TimelineOppositeContent, TimelineSeparator } from '@material-ui/lab'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport GenshinCharacter from './GenshinCharacter'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    alignSelf: 'center'\r\n  },\r\n  genshinTimelineItem: {\r\n    '&:nth-child(even) > .MuiTimelineItem-content': {\r\n      display: 'block'\r\n    }\r\n  },\r\n  charactersContainer: {\r\n    display: 'flex',\r\n    marginTop: '-16px'\r\n  }\r\n}))\r\n\r\nfunction GenshinTimelineItem ({ element }) {\r\n  const classes = useStyles()\r\n\r\n  const has5Star = element.characters.some(character => character.data.rarity === '5')\r\n  const hasC6 = element.characters.some(character => character.constellation === 'c6')\r\n\r\n  return (\r\n    <TimelineItem className={classes.genshinTimelineItem}>\r\n      <TimelineOppositeContent>\r\n        <Typography variant='body2' color='textSecondary'>{element.date.format('DD/MM/YYYY')}</Typography>\r\n      </TimelineOppositeContent>\r\n      <TimelineSeparator>\r\n        <TimelineDot style={hasC6 ? { background: '#005ab1' } : { background: '#373737' }}>\r\n          <StarIcon style={has5Star ? { color: '#ffaf00' } : {}} />\r\n        </TimelineDot>\r\n        <TimelineConnector />\r\n      </TimelineSeparator>\r\n      <TimelineContent className={classes.charactersContainer}>\r\n        {element.characters.map((character, key) => <GenshinCharacter key={key} character={character} />)}\r\n      </TimelineContent>\r\n    </TimelineItem>\r\n  )\r\n}\r\n\r\nfunction GenshinTimeline ({ timelineElements }) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Timeline align='alternate'>\r\n        {timelineElements && timelineElements.map((element, key) => <GenshinTimelineItem key={key} element={element} />)}\r\n      </Timeline>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenshinTimeline\r\n","export const CLIENT_ID = '494997772091-kiecjfft59fo5hvkaom6gj490v6tmqkc.apps.googleusercontent.com'\r\nexport const SCOPES = 'https://www.googleapis.com/auth/spreadsheets.readonly'\r\nexport const DISCOVERY_DOCS = ['https://sheets.googleapis.com/$discovery/rest?version=v4']\r\n","import { CLIENT_ID, DISCOVERY_DOCS, SCOPES } from './keys'\r\n\r\nexport function loadSpreadSheetAPI (gapi) {\r\n  return gapi.client.init({\r\n    client_id: CLIENT_ID,\r\n    scope: SCOPES,\r\n    discoveryDocs: DISCOVERY_DOCS\r\n  })\r\n}\r\n","import { CircularProgress, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nfunction Progress () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Progress\r\n","import genshinDb from 'genshin-db'\r\nimport moment from 'moment'\r\n\r\nmoment.locale('ru')\r\n\r\nconst CHARACTER_NAMES_STAR_4_ROW_ID = 0\r\nconst DATES_STAR_4_C0_ROW_ID = 1\r\nconst DATES_STAR_4_C6_ROW_ID = 7\r\nconst CHARACTER_NAMES_STAR_5_ROW_ID = 9\r\nconst DATES_STAR_5_C0_ROW_ID = 10\r\nconst DATES_STAR_5_C6_ROW_ID = 16\r\n\r\nconst elementRelations = {\r\n  Анемо: 'Anemo',\r\n  Крио: 'Cryo',\r\n  Дендро: 'Dendro',\r\n  Электро: 'Electro',\r\n  Гео: 'Geo',\r\n  Гидро: 'Hydro',\r\n  Пиро: 'Pyro'\r\n}\r\n\r\nexport default function serializeValues (values) {\r\n  const dates = {}\r\n  let names = []\r\n  values.forEach((v, ROW_ID) => {\r\n    if (\r\n      ROW_ID === CHARACTER_NAMES_STAR_4_ROW_ID ||\r\n      ROW_ID === CHARACTER_NAMES_STAR_5_ROW_ID\r\n    ) {\r\n      names = v\r\n    }\r\n    if (\r\n      (ROW_ID >= DATES_STAR_4_C0_ROW_ID && ROW_ID <= DATES_STAR_4_C6_ROW_ID) ||\r\n      (ROW_ID >= DATES_STAR_5_C0_ROW_ID && ROW_ID <= DATES_STAR_5_C6_ROW_ID)\r\n    ) {\r\n      v.forEach((date, COLUMN_ID) => {\r\n        if (!date || COLUMN_ID === 0) {\r\n          return\r\n        }\r\n        const queryOpts = { queryLanguages: ['Russian'], resultLanguage: 'Russian' }\r\n        const data = genshinDb.characters(names[COLUMN_ID], queryOpts)\r\n        if (!data) {\r\n          console.error(names[COLUMN_ID])\r\n          return\r\n        }\r\n        const constellationImages = genshinDb.constellations(names[COLUMN_ID], queryOpts).images\r\n        const element = genshinDb.elements(elementRelations[data.element])\r\n        dates[date] = {\r\n          ...dates[date] || {},\r\n          date: moment(date, 'DD/MM/YYYY'),\r\n          characters: [\r\n            ...dates[date]?.characters || [],\r\n            {\r\n              name: names[COLUMN_ID],\r\n              data,\r\n              element,\r\n              constellationImages,\r\n              constellation: `c${(ROW_ID - (ROW_ID >= DATES_STAR_5_C0_ROW_ID ? DATES_STAR_5_C0_ROW_ID : 1)).toString()}`\r\n            }\r\n          ]\r\n        }\r\n      })\r\n    }\r\n  })\r\n  return Object.values(dates).sort((f, s) => f.date.unix() - s.date.unix())\r\n}\r\n","import { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { uniqBy } from 'lodash'\r\nimport GenshinCharacter from './GenshinCharacter'\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    position: 'fixed',\r\n    top: theme.spacing(8),\r\n    display: 'flex',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(1),\r\n    background: 'white',\r\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\r\n    zIndex: 1\r\n  }\r\n}))\r\n\r\nfunction GenshinTimelineFilter ({ timelineElements, filteredTimelineElements, setFilteredTimelineElements }) {\r\n  const classes = useStyles()\r\n  const [filteredNames, setFilteredNames] = useState([])\r\n\r\n  useEffect(() => {\r\n    setFilteredTimelineElements(timelineElements)\r\n  }, [timelineElements, setFilteredTimelineElements])\r\n\r\n  const characters = useMemo(() => timelineElements.reduce((a, v) => [...a, ...v.characters], []), [timelineElements])\r\n  const uniqueCharacters = useMemo(() => uniqBy(characters, c => c.name), [characters])\r\n\r\n  // const filteredCharacters = filteredTimelineElements ? filteredTimelineElements.reduce((a, v) => [...a, ...v.characters], []) : []\r\n  // const filteredUniqueCharacters = uniqBy(filteredCharacters, c => c.name)\r\n  // const filteredUniqueCharacterNames = useMemo(() => filteredUniqueCharacters.map(c => c.name), [filteredUniqueCharacters])\r\n\r\n  const handleChange = useCallback((_, newCharacterNames) => {\r\n    setFilteredNames(newCharacterNames)\r\n    if (newCharacterNames.length === 0) {\r\n      setFilteredTimelineElements(timelineElements)\r\n      return\r\n    }\r\n    const newTimelineElements = timelineElements.map(e => {\r\n      const newCharacters = e.characters.filter(c => newCharacterNames.includes(c.name))\r\n      return { ...e, characters: newCharacters }\r\n    })\r\n    setFilteredTimelineElements(newTimelineElements.filter(e => e.characters.length !== 0))\r\n  }, [timelineElements, setFilteredTimelineElements])\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <ToggleButtonGroup size='small' value={filteredNames} onChange={handleChange}>\r\n        {uniqueCharacters.map((character, key) => (\r\n          <ToggleButton key={key} value={character.name}>\r\n            <GenshinCharacter character={character} small constellation={false} />\r\n          </ToggleButton>\r\n        ))}\r\n      </ToggleButtonGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenshinTimelineFilter\r\n","import './App.css'\r\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { loadGapiInsideDOM, loadClientAuth2 } from 'gapi-script'\r\nimport GenshinTimeline from './GenshinTimeline'\r\nimport { CLIENT_ID, SCOPES } from './keys'\r\nimport { loadSpreadSheetAPI } from './helpers'\r\nimport Progress from './Progress'\r\nimport serializeValues from './serializeValues'\r\nimport GenshinTimelineFilter from './GenshinTimelineFilter'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(17)\r\n  }\r\n}))\r\n\r\nconst spreadsheetId = '1jQb1n1dpYMFmhd9Gf07CXeTBILHAofc3eh8qwkmkKQE'\r\nconst range = 'Timeline v2'\r\n\r\nfunction App () {\r\n  const classes = useStyles()\r\n  const [gapi, setGapi] = useState(false)\r\n  const [isSignedIn, setSignedIn] = useState(false)\r\n  const [timelineElements, setTimelineElements] = useState(false)\r\n  const [filteredTimelineElements, setFilteredTimelineElements] = useState(false)\r\n\r\n  const updateSignedInStatus = useCallback(() => {\r\n    if (!gapi) {\r\n      return\r\n    }\r\n    setSignedIn(gapi.auth2.getAuthInstance().isSignedIn.get())\r\n  }, [gapi])\r\n\r\n  useEffect(() => {\r\n    async function initGoogleApi () {\r\n      const gapi = await loadGapiInsideDOM()\r\n      await loadClientAuth2(gapi, CLIENT_ID, SCOPES)\r\n      await loadSpreadSheetAPI(gapi)\r\n      setGapi(gapi)\r\n      updateSignedInStatus()\r\n    }\r\n    initGoogleApi()\r\n  }, [gapi, updateSignedInStatus])\r\n\r\n  const handleSignInClick = useCallback(() => {\r\n    gapi.auth2.getAuthInstance().signIn().then(() => updateSignedInStatus())\r\n  }, [gapi, updateSignedInStatus])\r\n\r\n  const handleSignOutClick = useCallback(() => {\r\n    gapi.auth2.getAuthInstance().signOut().then(() => updateSignedInStatus())\r\n  }, [gapi, updateSignedInStatus])\r\n\r\n  useEffect(() => {\r\n    async function loadSpreadSheetData () {\r\n      const { result: { values } } = await gapi.client.sheets.spreadsheets.values.get({ spreadsheetId, range })\r\n      setTimelineElements(serializeValues(values))\r\n    }\r\n    if (gapi) {\r\n      loadSpreadSheetData()\r\n    }\r\n  }, [gapi])\r\n\r\n  return (\r\n    <div className='App'>\r\n      <AppBar position='fixed'>\r\n        {gapi &&\r\n          <Toolbar>\r\n            <Typography variant='h6' style={{ flexGrow: 1, textAlign: 'left' }}>\r\n              Genshin Timeline\r\n            </Typography>\r\n            {isSignedIn\r\n              ? <Button color='inherit' onClick={handleSignOutClick}>Выйти</Button>\r\n              : <Button color='inherit' onClick={handleSignInClick}>Войти</Button>}\r\n          </Toolbar>}\r\n      </AppBar>\r\n      {(!gapi || isSignedIn === undefined || !timelineElements) && <Progress />}\r\n      {gapi && isSignedIn && timelineElements && (\r\n        <div className={classes.container}>\r\n          <GenshinTimeline timelineElements={filteredTimelineElements} />\r\n          <GenshinTimelineFilter\r\n            timelineElements={timelineElements}\r\n            filteredTimelineElements={filteredTimelineElements}\r\n            setFilteredTimelineElements={setFilteredTimelineElements}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}